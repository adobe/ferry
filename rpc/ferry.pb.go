// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: ferry.proto

package ferry

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KeyRangeResponse_OpStatus int32

const (
	KeyRangeResponse_SUCCESS   KeyRangeResponse_OpStatus = 0 //
	KeyRangeResponse_FAILURE   KeyRangeResponse_OpStatus = 1 // FINAL failure - won't retry
	KeyRangeResponse_TRANSIENT KeyRangeResponse_OpStatus = 2 // TRANSIENT failure
)

// Enum value maps for KeyRangeResponse_OpStatus.
var (
	KeyRangeResponse_OpStatus_name = map[int32]string{
		0: "SUCCESS",
		1: "FAILURE",
		2: "TRANSIENT",
	}
	KeyRangeResponse_OpStatus_value = map[string]int32{
		"SUCCESS":   0,
		"FAILURE":   1,
		"TRANSIENT": 2,
	}
)

func (x KeyRangeResponse_OpStatus) Enum() *KeyRangeResponse_OpStatus {
	p := new(KeyRangeResponse_OpStatus)
	*p = x
	return p
}

func (x KeyRangeResponse_OpStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyRangeResponse_OpStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ferry_proto_enumTypes[0].Descriptor()
}

func (KeyRangeResponse_OpStatus) Type() protoreflect.EnumType {
	return &file_ferry_proto_enumTypes[0]
}

func (x KeyRangeResponse_OpStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyRangeResponse_OpStatus.Descriptor instead.
func (KeyRangeResponse_OpStatus) EnumDescriptor() ([]byte, []int) {
	return file_ferry_proto_rawDescGZIP(), []int{3, 0}
}

type SessionResponse_OpStatus int32

const (
	SessionResponse_SUCCESS SessionResponse_OpStatus = 0
	SessionResponse_FAILURE SessionResponse_OpStatus = 1
)

// Enum value maps for SessionResponse_OpStatus.
var (
	SessionResponse_OpStatus_name = map[int32]string{
		0: "SUCCESS",
		1: "FAILURE",
	}
	SessionResponse_OpStatus_value = map[string]int32{
		"SUCCESS": 0,
		"FAILURE": 1,
	}
)

func (x SessionResponse_OpStatus) Enum() *SessionResponse_OpStatus {
	p := new(SessionResponse_OpStatus)
	*p = x
	return p
}

func (x SessionResponse_OpStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionResponse_OpStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ferry_proto_enumTypes[1].Descriptor()
}

func (SessionResponse_OpStatus) Type() protoreflect.EnumType {
	return &file_ferry_proto_enumTypes[1]
}

func (x SessionResponse_OpStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionResponse_OpStatus.Descriptor instead.
func (SessionResponse_OpStatus) EnumDescriptor() ([]byte, []int) {
	return file_ferry_proto_rawDescGZIP(), []int{4, 0}
}

type SessionResponse_SessionState int32

const (
	SessionResponse_OPEN   SessionResponse_SessionState = 0
	SessionResponse_CLOSED SessionResponse_SessionState = 1
)

// Enum value maps for SessionResponse_SessionState.
var (
	SessionResponse_SessionState_name = map[int32]string{
		0: "OPEN",
		1: "CLOSED",
	}
	SessionResponse_SessionState_value = map[string]int32{
		"OPEN":   0,
		"CLOSED": 1,
	}
)

func (x SessionResponse_SessionState) Enum() *SessionResponse_SessionState {
	p := new(SessionResponse_SessionState)
	*p = x
	return p
}

func (x SessionResponse_SessionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionResponse_SessionState) Descriptor() protoreflect.EnumDescriptor {
	return file_ferry_proto_enumTypes[2].Descriptor()
}

func (SessionResponse_SessionState) Type() protoreflect.EnumType {
	return &file_ferry_proto_enumTypes[2]
}

func (x SessionResponse_SessionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionResponse_SessionState.Descriptor instead.
func (SessionResponse_SessionState) EnumDescriptor() ([]byte, []int) {
	return file_ferry_proto_rawDescGZIP(), []int{4, 1}
}

type Time struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts int64 `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
}

func (x *Time) Reset() {
	*x = Time{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ferry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Time) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Time) ProtoMessage() {}

func (x *Time) ProtoReflect() protoreflect.Message {
	mi := &file_ferry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Time.ProtoReflect.Descriptor instead.
func (*Time) Descriptor() ([]byte, []int) {
	return file_ferry_proto_rawDescGZIP(), []int{0}
}

func (x *Time) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

type Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUrl string `protobuf:"bytes,1,opt,name=target_url,json=targetUrl,proto3" json:"target_url,omitempty"`
}

func (x *Target) Reset() {
	*x = Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ferry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_ferry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_ferry_proto_rawDescGZIP(), []int{1}
}

func (x *Target) GetTargetUrl() string {
	if x != nil {
		return x.TargetUrl
	}
	return ""
}

type KeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Begin     []byte `protobuf:"bytes,1,opt,name=begin,proto3" json:"begin,omitempty"`
	End       []byte `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	SessionId string `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // session_id for the app level session
}

func (x *KeyRequest) Reset() {
	*x = KeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ferry_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyRequest) ProtoMessage() {}

func (x *KeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ferry_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyRequest.ProtoReflect.Descriptor instead.
func (*KeyRequest) Descriptor() ([]byte, []int) {
	return file_ferry_proto_rawDescGZIP(), []int{2}
}

func (x *KeyRequest) GetBegin() []byte {
	if x != nil {
		return x.Begin
	}
	return nil
}

func (x *KeyRequest) GetEnd() []byte {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *KeyRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type KeyRangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginKey  []byte                    `protobuf:"bytes,1,opt,name=begin_key,json=beginKey,proto3" json:"begin_key,omitempty"`
	EndKey    []byte                    `protobuf:"bytes,2,opt,name=end_key,json=endKey,proto3" json:"end_key,omitempty"`
	StartTime int64                     `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   int64                     `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Status    KeyRangeResponse_OpStatus `protobuf:"varint,5,opt,name=status,proto3,enum=ferry.KeyRangeResponse_OpStatus" json:"status,omitempty"`
	FileUrl   string                    `protobuf:"bytes,6,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"` // only set on success
}

func (x *KeyRangeResponse) Reset() {
	*x = KeyRangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ferry_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyRangeResponse) ProtoMessage() {}

func (x *KeyRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ferry_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyRangeResponse.ProtoReflect.Descriptor instead.
func (*KeyRangeResponse) Descriptor() ([]byte, []int) {
	return file_ferry_proto_rawDescGZIP(), []int{3}
}

func (x *KeyRangeResponse) GetBeginKey() []byte {
	if x != nil {
		return x.BeginKey
	}
	return nil
}

func (x *KeyRangeResponse) GetEndKey() []byte {
	if x != nil {
		return x.EndKey
	}
	return nil
}

func (x *KeyRangeResponse) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *KeyRangeResponse) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *KeyRangeResponse) GetStatus() KeyRangeResponse_OpStatus {
	if x != nil {
		return x.Status
	}
	return KeyRangeResponse_SUCCESS
}

func (x *KeyRangeResponse) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

type SessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       SessionResponse_OpStatus     `protobuf:"varint,1,opt,name=status,proto3,enum=ferry.SessionResponse_OpStatus" json:"status,omitempty"`   // status of operation
	State        SessionResponse_SessionState `protobuf:"varint,2,opt,name=state,proto3,enum=ferry.SessionResponse_SessionState" json:"state,omitempty"` // final state of session
	SessionId    string                       `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                 // session_id for the app level session
	ErrorDetails string                       `protobuf:"bytes,4,opt,name=error_details,json=errorDetails,proto3" json:"error_details,omitempty"`        // only set on success
}

func (x *SessionResponse) Reset() {
	*x = SessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ferry_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionResponse) ProtoMessage() {}

func (x *SessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ferry_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionResponse.ProtoReflect.Descriptor instead.
func (*SessionResponse) Descriptor() ([]byte, []int) {
	return file_ferry_proto_rawDescGZIP(), []int{4}
}

func (x *SessionResponse) GetStatus() SessionResponse_OpStatus {
	if x != nil {
		return x.Status
	}
	return SessionResponse_SUCCESS
}

func (x *SessionResponse) GetState() SessionResponse_SessionState {
	if x != nil {
		return x.State
	}
	return SessionResponse_OPEN
}

func (x *SessionResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SessionResponse) GetErrorDetails() string {
	if x != nil {
		return x.ErrorDetails
	}
	return ""
}

type Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // session_id for the app level session
}

func (x *Session) Reset() {
	*x = Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ferry_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_ferry_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_ferry_proto_rawDescGZIP(), []int{5}
}

func (x *Session) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

var File_ferry_proto protoreflect.FileDescriptor

var file_ferry_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x66, 0x65, 0x72, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x66,
	0x65, 0x72, 0x72, 0x79, 0x22, 0x16, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x73, 0x22, 0x27, 0x0a, 0x06,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x53, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x8c, 0x02, 0x0a, 0x10, 0x4b,
	0x65, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65,
	0x6e, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x66, 0x65, 0x72, 0x72, 0x79, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x65, 0x55, 0x72, 0x6c, 0x22, 0x33, 0x0a, 0x08, 0x4f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x22, 0x95, 0x02, 0x0a, 0x0f, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x66, 0x65, 0x72, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x66, 0x65, 0x72, 0x72, 0x79, 0x2e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x24, 0x0a, 0x08, 0x4f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x01, 0x22, 0x24, 0x0a, 0x0c, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4f,
	0x50, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10,
	0x01, 0x22, 0x28, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x32, 0xe1, 0x01, 0x0a, 0x05,
	0x46, 0x65, 0x72, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x10, 0x47, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x4f, 0x66, 0x54, 0x68, 0x65, 0x44, 0x61, 0x79, 0x12, 0x0b, 0x2e, 0x66, 0x65, 0x72, 0x72,
	0x79, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x0b, 0x2e, 0x66, 0x65, 0x72, 0x72, 0x79, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x2e, 0x66, 0x65, 0x72, 0x72, 0x79, 0x2e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x1a, 0x16, 0x2e, 0x66, 0x65, 0x72, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37,
	0x0a, 0x06, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x11, 0x2e, 0x66, 0x65, 0x72, 0x72, 0x79,
	0x2e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x66, 0x65,
	0x72, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x36, 0x0a, 0x0a, 0x45, 0x6e, 0x64, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x2e, 0x66, 0x65, 0x72, 0x72, 0x79, 0x2e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x16, 0x2e, 0x66, 0x65, 0x72, 0x72, 0x79, 0x2e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x64,
	0x6f, 0x62, 0x65, 0x2f, 0x66, 0x65, 0x72, 0x72, 0x79, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x66, 0x65,
	0x72, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ferry_proto_rawDescOnce sync.Once
	file_ferry_proto_rawDescData = file_ferry_proto_rawDesc
)

func file_ferry_proto_rawDescGZIP() []byte {
	file_ferry_proto_rawDescOnce.Do(func() {
		file_ferry_proto_rawDescData = protoimpl.X.CompressGZIP(file_ferry_proto_rawDescData)
	})
	return file_ferry_proto_rawDescData
}

var file_ferry_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_ferry_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_ferry_proto_goTypes = []interface{}{
	(KeyRangeResponse_OpStatus)(0),    // 0: ferry.KeyRangeResponse.OpStatus
	(SessionResponse_OpStatus)(0),     // 1: ferry.SessionResponse.OpStatus
	(SessionResponse_SessionState)(0), // 2: ferry.SessionResponse.SessionState
	(*Time)(nil),                      // 3: ferry.Time
	(*Target)(nil),                    // 4: ferry.Target
	(*KeyRequest)(nil),                // 5: ferry.KeyRequest
	(*KeyRangeResponse)(nil),          // 6: ferry.KeyRangeResponse
	(*SessionResponse)(nil),           // 7: ferry.SessionResponse
	(*Session)(nil),                   // 8: ferry.Session
}
var file_ferry_proto_depIdxs = []int32{
	0, // 0: ferry.KeyRangeResponse.status:type_name -> ferry.KeyRangeResponse.OpStatus
	1, // 1: ferry.SessionResponse.status:type_name -> ferry.SessionResponse.OpStatus
	2, // 2: ferry.SessionResponse.state:type_name -> ferry.SessionResponse.SessionState
	3, // 3: ferry.Ferry.GiveTimeOfTheDay:input_type -> ferry.Time
	4, // 4: ferry.Ferry.StartSession:input_type -> ferry.Target
	5, // 5: ferry.Ferry.Export:input_type -> ferry.KeyRequest
	8, // 6: ferry.Ferry.EndSession:input_type -> ferry.Session
	3, // 7: ferry.Ferry.GiveTimeOfTheDay:output_type -> ferry.Time
	7, // 8: ferry.Ferry.StartSession:output_type -> ferry.SessionResponse
	7, // 9: ferry.Ferry.Export:output_type -> ferry.SessionResponse
	7, // 10: ferry.Ferry.EndSession:output_type -> ferry.SessionResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_ferry_proto_init() }
func file_ferry_proto_init() {
	if File_ferry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ferry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Time); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ferry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ferry_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ferry_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyRangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ferry_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ferry_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ferry_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ferry_proto_goTypes,
		DependencyIndexes: file_ferry_proto_depIdxs,
		EnumInfos:         file_ferry_proto_enumTypes,
		MessageInfos:      file_ferry_proto_msgTypes,
	}.Build()
	File_ferry_proto = out.File
	file_ferry_proto_rawDesc = nil
	file_ferry_proto_goTypes = nil
	file_ferry_proto_depIdxs = nil
}
